activity_main.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/textView"
        android:layout_width="257dp"
        android:layout_height="59dp"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:text="PARSER"
        android:gravity="center"
        android:textSize="36sp"
        app:layout_constraintBottom_toTopOf="@+id/display"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:layout_marginBottom="56dp"
        android:backgroundTint="#182C9F"
        android:onClick="parsexml"
        android:text="XML"
        android:textAlignment="center"
        app:layout_constraintBottom_toTopOf="@+id/display"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.256"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.959" />

    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:layout_marginBottom="68dp"
        android:backgroundTint="#23669B"
        android:onClick="parsejson"
        android:text="JSON"
        android:textAlignment="center"
        app:layout_constraintBottom_toTopOf="@+id/display"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.854"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="1.0" />

    <TextView
        android:id="@+id/display"
        android:layout_width="402dp"
        android:layout_height="332dp"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:textAlignment="center"
        android:textColor="#721334"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.444"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="1.0" />

</androidx.constraintlayout.widget.ConstraintLayout>

city.json:
[
  {
    "name":"HASSAN",
    "lat":"12.295",
    "long":"76.639",
    "temperature":"22",
    "humidity":"92%"
  },
  {
    "name":"MANDYA",
    "lat":"10.11",
    "long":"66.639",
    "temperature":"24",
    "humidity":"82%"
  }
]

city.xml:
<?xml version="1.0" encoding="utf-8"?>
<records>
    <place>
        <name>Mysore</name>
        <lat>12.295</lat>
        <long>76.639</long>
        <temperature>22</temperature>
        <humidity>90%</humidity>
    </place>

    <place>
        <name>Bangalore</name>
        <lat>13.295</lat>
        <long>77.639</long>
        <temperature>25</temperature>
        <humidity>74%</humidity>
    </place>
</records>

main_activity.java
package com.example.a9;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;
import org.json.JSONArray;
import org.json.JSONObject;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

public class MainActivity extends AppCompatActivity {
    TextView display;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        display = findViewById(R.id.display);
    }

    public void parsexml(View v) {
        StringBuilder stringBuilder = new StringBuilder();
        try {
            InputStream is = getAssets().open("city.xml");
            DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
            Document document = documentBuilder.parse(is);
            NodeList nodeList = document.getElementsByTagName("place");
            for (int i = 0; i < nodeList.getLength(); i++) {
                Element element = (Element) nodeList.item(i);
                stringBuilder.append("\nName: ").append(getValue(element, "name"));
                stringBuilder.append("\nLatitude: ").append(getValue(element, "lat"));
                stringBuilder.append("\nLongitude: ").append(getValue(element, "long"));
                stringBuilder.append("\nTemperature: ").append(getValue(element, "temperature"));
                stringBuilder.append("\nHumidity: ").append(getValue(element, "humidity"));
                stringBuilder.append("\n----------");
            }
            display.setText("XML DATA\n-------------\n" + stringBuilder.toString());
        } catch (Exception e) {
            e.printStackTrace();
            showToast("Error in reading XML FILE");
        }
    }

    public void parsejson(View v) {
        StringBuilder stringBuilder = new StringBuilder();
        try {
            InputStream is = getAssets().open("city.json");
            byte[] buffer = new byte[is.available()];
            is.read(buffer);
            String json = new String(buffer, StandardCharsets.UTF_8);
            JSONArray jsonArray = new JSONArray(json);
            for (int i = 0; i < jsonArray.length(); i++) {
                JSONObject jsonObject = jsonArray.getJSONObject(i);
                stringBuilder.append("\nName: ").append(jsonObject.getString("name"));
                stringBuilder.append("\nLatitude: ").append(jsonObject.getString("lat"));
                stringBuilder.append("\nLongitude: ").append(jsonObject.getString("long"));
                stringBuilder.append("\nTemperature: ").append(jsonObject.getString("temperature"));
                stringBuilder.append("\nHumidity: ").append(jsonObject.getString("humidity"));
                stringBuilder.append("\n----------");
            }
            display.setText("JSON DATA\n--------\n" + stringBuilder.toString());
            is.close();
        } catch (Exception e) {
            e.printStackTrace();
            showToast("Error in reading JSON file");
        }
    }

    private String getValue(Element element, String tag) {
        return element.getElementsByTagName(tag).item(0).getTextContent();
    }

    private void showToast(String message) {
        Toast.makeText(MainActivity.this, message, Toast.LENGTH_LONG).show();
    }
}
